/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;


import Classes.InfoTab_operations;
import Classes.Info_DB_Operations;
import Classes.Restart;
import Classes.SubjectTab_operations;
import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Administrator
 */
public class frmMainPage extends javax.swing.JFrame {

    /**
     * Creates new form frmMainPage
     */
    public frmMainPage() {
           
         
           
             
            
               
        
                 //  Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                 // this. setLocation(dim.width/2- this.getSize().width/2, dim.height/2- this.getSize().height/2);
           //To set the image of the frame
              setIconImage(new ImageIcon(getClass()
                    .getResource("/Pics/Icons/inf.gif")).getImage());
          
            
            laod_frm ();
             //This to locate the new made instnace in the ceneter of secreen
              setLocationRelativeTo(null);
                 setVisible(true);    
            //This patteren of code is needed when restartin the app
            
           
            
                 
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
     //Initializing the global vars and methods that are used through the program
        ResultSet Inf_RS,sub_RS;
        Info_DB_Operations  idbo=new Info_DB_Operations ();
        InfoTab_operations  infOp= new InfoTab_operations();
        SubjectTab_operations subOp=new  SubjectTab_operations();
        String path;
       
         int  index=1;
        String subName="";
     
        
         
        //Metho to load the database to the form
        
      
      //Method to check if the dbbase serever is available
        /**
         * 
         * @return
         */
        public boolean check_data()
               
        {
        
        try {
            
            
             //When the form is opened ,the  information table's data is shown    
             Inf_RS=infOp.Show_Data();
             idbo.RS_first(Inf_RS);
            return true;
           
        } catch (Exception ex) { 
            return false;      } 
             
          
        
        }//End checkin method
      
        
        //Mthod to decide what to do dependin' on the result of check data
        private void laod_frm ()
        {
        
            //If db server is open then fill the data to the form
          if(check_data())
          {
            try { 
              
               //To show the frame in center
         // setLocationRelativeTo(null);
                initComponents();
                //When the form is opened ,the  information table's data is shown    
                  Inf_RS=infOp.Show_Data();
                    //Call the method designated for counting the total of records ans set the total lablel with the result
                  lblTotal.setText(idbo.show_total(Inf_RS));
                  //The first result is first shown 
                  show_data(idbo.RS_first(Inf_RS));
                 
                        
                } catch (SQLException ex) {
                Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
          
          
          }
          //If not close the program and open the wamp server
          else
          {      
             
         //Show the msg to alert the user that he needs to restart the program
       // JOptionPane.showMessageDialog(null," Sorry the wamp serever is not run \n  Please wait a minute while running wamp then rerun the program ","Note",JOptionPane.OK_OPTION);
             
                    try {
                 //JOptionPane.showMessageDialog(null, "Please rerun the app in a minute", "Technical Error", JOptionPane.ERROR_MESSAGE);
                    // this.setState(JFrame.ICONIFIED);
                   
                                              //Then restart the project after ten seconds
                       Process  exec = Runtime.getRuntime().exec("/C:/wamp/wampmanager.exe");    
                 try {
                     // Runs outside of the Swing UI thread
                             
                    Thread.sleep(5000);
                   new frmMainPage();
                  
           
                   
                       //To show the components of the frame
                      initComponents(); 
                      
                  //This to hide the frame disposed from the task bar
                     this.setType(JFrame.Type.UTILITY);
                                        
                   
                
                



 
                  
                  
           
          
       
            
            // new mess();
           // new mess();
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
              
                     
                      
                 
                } catch (IOException ex1) {
                    
                    // JOptionPane.showMessageDialog(null,ex1,"Error occurred",JOptionPane.OK_OPTION);
                    // Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex1);
                      
                }//End catch
                       
              }//End else
          
          }//End method load form
        
        
            //Method to restart the app 
        public void restart() throws IOException
        { 
      
            
          
         
             Runtime.getRuntime().exec("C:/Users/Administrator/Documents/NetBeansProjects/Infromation Store/dist/Infromation_Store.jar");
             System.exit(0);
       /* try {
            this.dispose();
           
            Thread.sleep(1500);
             
          
          
             new frmMainPage();
             this.setVisible(false);
        } catch (InterruptedException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }*/
                 
        
        }
        
      
      
        
      //Method to show data once starting the app
        /**
         * 
         * @param 
         */
        public void show_data(ResultSet rs)
       {
        try {
            //Bind the fields of the table with the frame components properly
             txtID.setText(rs.getString("info_id"));
             txtTitle.setText(rs.getString("Title"));
             subOp.fill_combo_box(cmbSubject);
             subOp.fill_combo_box(cmbSubjectSearch);
             cmbSubject.setSelectedItem(rs.getString("subName"));
              show_image("Subject_Pic",lblSubPic);
            txtInfo.setText(rs.getString("Info"));
            txtComment.setText(rs.getString("Comment"));
            txtMore_info.setText(rs.getString("more_info"));
            txtTip.setText(rs.getString("Tips"));
            txtPicComment.setText(rs.getString("Image_comment"));
            ftxtDateTime.setText(rs.getString("written_Date"));
            lblPosition.setText(String.valueOf(index));
              show_image("info_Pic",lblPic);
       
           
             
           
         
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null,"! Sorry no match found !", "Error", JOptionPane.OK_OPTION, null);
             txtSearch.setText("");
        } 
          
          
          
            
            
      }
      //End of show data method
      
      //Method to initialize thr form to get the new entry
      private void add_new() throws SQLException
      {      
          //Call the method designated for addin new reord
              infOp.Insert_NewRow();
              Inf_RS=infOp.Show_Data();
              index=Integer.valueOf(idbo.show_total(Inf_RS));
              lblTotal.setText(String.valueOf(index));
              lblPic.setIcon(null);
            //Then jump to the inserted row  
            show_data(idbo.RS_last(Inf_RS));
           
      
      }//End add new method
      
      
      //Update the selected  a selected row
      
      private void set_update()
      {
         try {
            //Bind the values of the components with the parameters of the update method
            
                      
              String[] textboxes=new String[8];
              Date updatingDate =new Date();
              textboxes[0]=txtTitle.getText();
              textboxes[1]=cmbSubject.getSelectedItem().toString();
              textboxes[2]=txtInfo.getText();
              textboxes[3]=txtComment.getText();
              textboxes[4]=txtMore_info.getText();
              textboxes[5]=txtPicComment.getText();
              textboxes[6]=txtTip.getText();
               textboxes[7]=cmbSubject.getSelectedItem().toString();
              java.sql.Date sqlDate = new java.sql.Date(updatingDate.getTime());
            
              
                //Call the update method
            infOp.update_Row(Integer.valueOf(txtID.getText()),textboxes,sqlDate);
            
            
          
             
            //JOptionPane.showMessageDialog(null,String.valueOf(infOp.Insert_NewRow().getInt("Info_I")));
           } catch (SQLException ex) {JOptionPane.showMessageDialog(null,ex);   
        }
      
      }//End of update method 
      
      
      //Method to update the data 
      /**
       * 
       */
      public void updat_frame() 
      {
     //When we update first we check if the result set to updated is either search or show data
              
              if("".equals(txtSearch.getText()) && "".equals(subName) )
                 {try {
                  cmbSubject.enable(true);
                   set_update();
                  
                  Inf_RS=infOp.Show_Data();
           //Call the method regresh to show the new updates in the form instantly
               show_data( idbo.refresh_data(Inf_RS,index)  );
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
            }
                }
              else  if(!"".equals(txtSearch.getText()) && "".equals(subName))
              {try {
                    
                cmbSubject.enable(false);
                set_update();
             Inf_RS= infOp.search_info(txtSearch.getText());
             //Call the method regresh to show the new updates in the form instantly
             show_data( idbo.refresh_data(Inf_RS,index)  );
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
            }
                    
                   
              }
             else if(!"".equals(txtSearch.getText()) && !"".equals(subName))
              {
            try {
                 cmbSubject.enable(false);
                set_update();
               Inf_RS = infOp.search_sub_info(txtSearch.getText(),subName);
             //Call the method regresh to show the new updates in the form instantly
             show_data( idbo.refresh_data(Inf_RS,index)  );
                                              
                
            } catch (SQLException ex) {
                 JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
            }
              
              
              
              }
             else if("".equals(txtSearch.getText()) && !"".equals(subName))
              {
            try {
                //otherwise show the data according to the text enetered by the users
                   cmbSubject.enable(false);
                set_update();
               Inf_RS = infOp.search_sub_info(txtSearch.getText(),subName);
             //Call the method regresh to show the new updates in the form instantly
             show_data( idbo.refresh_data(Inf_RS,index)  );
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
            }
              
              }  
      
      
      }//End of update data method
      
      //Method to update the pic if any
      private ImageIcon show_image(String Pic_FieldName,JLabel lbl) 
      {
         byte[] imageData;
         ImageIcon format = null;
        try {
            if(Inf_RS.getBytes(Pic_FieldName)!=null)
            {
            imageData = Inf_RS.getBytes(Pic_FieldName);
            format = new ImageIcon(imageData);
            lbl.setIcon(ResizeImage(format,lbl));
            }
            else
            { 
               ImageIcon myImg = new  ImageIcon(getClass().getResource("/Pics/Default.png"));
                lbl.setIcon(ResizeImage(myImg,lbl));}
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        return format;
      }
      //End of update image method 
      
       //Method to allow the user to chhose an image to be saved in the database
     
     
      
      //Method to delete a specific row in a record
      private void delete_row() throws SQLException, FileNotFoundException, IOException
      { 
      //Call the method designated for deleting rows 
                       
          
       
          infOp.delete_Row(Integer.valueOf(txtID.getText()));
            
            
           //then jump to the nearest row     
                Inf_RS=infOp.Show_Data();
                index=Integer.valueOf(idbo.show_total( Inf_RS));
                lblTotal.setText(String.valueOf(index));
              
                          
             if( Inf_RS.next())
                 show_data(idbo.RS_next( Inf_RS));
               else
                { index=1;
                   show_data(idbo.RS_first( Inf_RS));
               }
               
      
              
              
             
      
      
      }  //End of delete row method
      
      //Method to allow the user to chhose an image to be saved in the database
      private void setImage()
      {
   //
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "png", "gif");
        fileChooser.addChoosableFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File SelectedFile = fileChooser.getSelectedFile();
           path = SelectedFile.getAbsolutePath();
            ImageIcon myImg = new ImageIcon(path);
            //Call resize image method to fit the chosen image with the label pic
            lblPic.setIcon((ResizeImage(myImg,lblPic)));
        }
       
   }//End of choosing pic method
      
       //Mtethod to resize sent image
   private ImageIcon ResizeImage(ImageIcon myimg,JLabel lbl)
    {
     //Fit the inserted picture with  the size of the label
        java.awt.Image Img=myimg.getImage();
        java.awt.Image newImg=Img.getScaledInstance(lbl.getWidth(), lbl.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image=new ImageIcon(newImg);
        
        return image;
       
    
    
    }//End of resize image
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnForward = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        frmSearchSub = new javax.swing.JInternalFrame();
        cmbSubjectSearch = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cbSelectCourse = new javax.swing.JCheckBox();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblPosition = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        lblSubPic = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        tpContent = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ftxtDateTime = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbSubject = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtTip = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtTitle = new javax.swing.JTextPane();
        lblFPBG = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtMore_info = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        lblPic = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtPicComment = new javax.swing.JTextPane();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblSub = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        miSrch = new javax.swing.JMenuItem();
        miPlans = new javax.swing.JMenuItem();
        miWeb = new javax.swing.JMenuItem();
        miAcc = new javax.swing.JMenu();
        miContacts = new javax.swing.JMenuItem();
        misAcc = new javax.swing.JMenuItem();
        miBlogs = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        miSelectSub = new javax.swing.JMenuItem();
        miUsrmanagement = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Note");
        setLocationByPlatform(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnForward.setToolTipText("Next page");
        btnForward.setBorderPainted(false);
        btnForward.setContentAreaFilled(false);
        btnForward.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Forward.jpg"))); // NOI18N
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });
        getContentPane().add(btnForward, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 140, 23, 20));

        btnBack.setToolTipText("First page");
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Back.jpg"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 140, 20, 20));

        btnDelete.setToolTipText("Delete this  row");
        btnDelete.setBorderPainted(false);
        btnDelete.setContentAreaFilled(false);
        btnDelete.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Delete.jpg"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 20, 20));

        btnUpdate.setToolTipText("Update this row");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setInheritsPopupMenu(true);
        btnUpdate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Save 1.jpg"))); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 20, 20));

        btnInsert.setToolTipText("Add new row");
        btnInsert.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnInsert.setBorderPainted(false);
        btnInsert.setContentAreaFilled(false);
        btnInsert.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/new.jpg"))); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 140, 20, 20));

        btnLast.setToolTipText("Move last");
        btnLast.setBorder(null);
        btnLast.setContentAreaFilled(false);
        btnLast.setRequestFocusEnabled(false);
        btnLast.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Last.jpg"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        getContentPane().add(btnLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 140, 14, 20));

        frmSearchSub.setVisible(false);

        cmbSubjectSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbSubjectSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbSubjectSearchMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbSubjectSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbSubjectSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbSubjectSearchMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbSubjectSearchMousePressed(evt);
            }
        });
        cmbSubjectSearch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSubjectSearchItemStateChanged(evt);
            }
        });
        cmbSubjectSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubjectSearchActionPerformed(evt);
            }
        });
        cmbSubjectSearch.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cmbSubjectSearchInputMethodTextChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setText("Subject :");

        cbSelectCourse.setText("Select Course");
        cbSelectCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectCourseActionPerformed(evt);
            }
        });

        btnOk.setBackground(new java.awt.Color(223, 223, 229));
        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnOK.gif"))); // NOI18N
        btnOk.setToolTipText("OK");
        btnOk.setBorderPainted(false);
        btnOk.setContentAreaFilled(false);
        btnOk.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnOK.gif"))); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnCancel.gif"))); // NOI18N
        btnCancel.setToolTipText("Cancel");
        btnCancel.setBorderPainted(false);
        btnCancel.setContentAreaFilled(false);
        btnCancel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnCancel.gif"))); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmSearchSubLayout = new javax.swing.GroupLayout(frmSearchSub.getContentPane());
        frmSearchSub.getContentPane().setLayout(frmSearchSubLayout);
        frmSearchSubLayout.setHorizontalGroup(
            frmSearchSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmSearchSubLayout.createSequentialGroup()
                .addGroup(frmSearchSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frmSearchSubLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel9)
                        .addGap(17, 17, 17)
                        .addGroup(frmSearchSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSubjectSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(frmSearchSubLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        frmSearchSubLayout.setVerticalGroup(
            frmSearchSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmSearchSubLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(cbSelectCourse)
                .addGap(18, 18, 18)
                .addGroup(frmSearchSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frmSearchSubLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9))
                    .addComponent(cmbSubjectSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(frmSearchSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(frmSearchSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 330, -1));

        lblTotal.setToolTipText("Total rows");
        getContentPane().add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 30, 17));

        jLabel10.setText("of {");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 20, -1));

        lblPosition.setToolTipText("Current position");
        getContentPane().add(lblPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 40, 17));

        btnPrevious.setToolTipText("Move previous");
        btnPrevious.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPrevious.setBorderPainted(false);
        btnPrevious.setContentAreaFilled(false);
        btnPrevious.setPreferredSize(new java.awt.Dimension(39, 23));
        btnPrevious.setRequestFocusEnabled(false);
        btnPrevious.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Previous.jpg"))); // NOI18N
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 140, 10, 20));

        btnFirst.setBackground(new java.awt.Color(204, 255, 51));
        btnFirst.setToolTipText("Move first");
        btnFirst.setBorder(null);
        btnFirst.setBorderPainted(false);
        btnFirst.setContentAreaFilled(false);
        btnFirst.setPreferredSize(new java.awt.Dimension(39, 23));
        btnFirst.setRequestFocusEnabled(false);
        btnFirst.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/First.jpg"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        getContentPane().add(btnFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 15, 20));

        lblSubPic.setBackground(new java.awt.Color(255, 51, 153));
        lblSubPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Default.png"))); // NOI18N
        lblSubPic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblSubPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 130));

        jLabel13.setText("}");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 10, -1));

        btnNext.setToolTipText("Move next");
        btnNext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNext.setBorderPainted(false);
        btnNext.setContentAreaFilled(false);
        btnNext.setPreferredSize(new java.awt.Dimension(39, 23));
        btnNext.setRequestFocusEnabled(false);
        btnNext.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/next.jpg"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 20, 20));

        txtSearch.setToolTipText("Search for a text or ID");
        txtSearch.setPreferredSize(new java.awt.Dimension(216, 22));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtSearchInputMethodTextChanged(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 220, 30));

        tpContent.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanel1.setEnabled(false);
        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.setLayout(null);

        txtID.setEditable(false);
        txtID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(txtID);
        txtID.setBounds(90, 20, 170, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("ID :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 20, 19, 13);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("Subject :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 70, 43, 13);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("Title :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(520, 0, 29, 13);

        ftxtDateTime.setEditable(false);
        ftxtDateTime.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.LONG))));
        ftxtDateTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtDateTimeActionPerformed(evt);
            }
        });
        jPanel1.add(ftxtDateTime);
        ftxtDateTime.setBounds(750, 30, 200, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setText("Date :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(710, 40, 30, 13);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setText("Comment :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(760, 100, 53, 13);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setText("Info :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 110, 27, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setText("Tips :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(760, 280, 27, 13);

        cmbSubject.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbSubjectMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbSubjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbSubjectMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbSubjectMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbSubjectMouseReleased(evt);
            }
        });
        cmbSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSubjectItemStateChanged(evt);
            }
        });
        cmbSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubjectActionPerformed(evt);
            }
        });
        cmbSubject.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cmbSubjectInputMethodTextChanged(evt);
            }
        });
        jPanel1.add(cmbSubject);
        cmbSubject.setBounds(90, 60, 180, 30);

        jLabel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel12);
        jLabel12.setBounds(10, 10, 270, 90);

        txtInfo.setBackground(new java.awt.Color(255, 255, 153));
        txtInfo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane2.setViewportView(txtInfo);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 130, 540, 320);

        txtComment.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane3.setViewportView(txtComment);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(760, 120, 290, 150);

        txtTip.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane4.setViewportView(txtTip);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(760, 300, 290, 150);

        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane6.setViewportView(txtTitle);

        jPanel1.add(jScrollPane6);
        jScrollPane6.setBounds(400, 20, 280, 50);

        lblFPBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/110_TuxWorld.jpg"))); // NOI18N
        jPanel1.add(lblFPBG);
        lblFPBG.setBounds(0, -20, 1110, 530);

        tpContent.addTab("First Page", jPanel1);

        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtMore_info.setFont(new java.awt.Font("SketchFlow Print", 1, 12)); // NOI18N
        jScrollPane5.setViewportView(txtMore_info);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 204, 0));
        jLabel8.setText("More_info :");

        lblPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Default.png"))); // NOI18N
        lblPic.setToolTipText("Double click to set an image");
        lblPic.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblPic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPicMouseClicked(evt);
            }
        });

        txtPicComment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jScrollPane7.setViewportView(txtPicComment);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel15.setText("Pictiure Comment :");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/SecondPageBG.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPic, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblPic, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tpContent.addTab("Second Page", jPanel2);

        getContentPane().add(tpContent, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, -1, -1));

        lblSub.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSub.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                lblSubInputMethodTextChanged(evt);
            }
        });
        lblSub.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                lblSubVetoableChange(evt);
            }
        });
        getContentPane().add(lblSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 140, 150, 20));

        btnRefresh.setToolTipText("Rfresh the database");
        btnRefresh.setBorderPainted(false);
        btnRefresh.setContentAreaFilled(false);
        btnRefresh.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnRef.jpg"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 28, 20, 20));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Header.jpg"))); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 920, 130));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Bar 3.jpg"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1110, 40));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Frame1s.gif"))); // NOI18N
        jMenu1.setText("Frames");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Subjects.gif"))); // NOI18N
        jMenuItem4.setText("Subjet Frame");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Img_viewer.gif"))); // NOI18N
        jMenuItem6.setText("Image viewer");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Personality.gif"))); // NOI18N
        jMenu10.setText("Pesonal Frames");

        miSrch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miSrch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Researches.gif"))); // NOI18N
        miSrch.setText("Daily Researches");
        miSrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSrchActionPerformed(evt);
            }
        });
        jMenu10.add(miSrch);

        miPlans.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miPlans.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/plns.gif"))); // NOI18N
        miPlans.setText("Plans");
        miPlans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPlansActionPerformed(evt);
            }
        });
        jMenu10.add(miPlans);

        miWeb.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miWeb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/websites.gif"))); // NOI18N
        miWeb.setText("Useful websites");
        miWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miWebActionPerformed(evt);
            }
        });
        jMenu10.add(miWeb);

        miAcc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Wallet.gif"))); // NOI18N
        miAcc.setText("My Wallet");

        miContacts.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miContacts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Contacts.gif"))); // NOI18N
        miContacts.setText("Contacts");
        miContacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miContactsActionPerformed(evt);
            }
        });
        miAcc.add(miContacts);

        misAcc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        misAcc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Acc.gif"))); // NOI18N
        misAcc.setText("Accounts");
        misAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                misAccActionPerformed(evt);
            }
        });
        miAcc.add(misAcc);

        miBlogs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miBlogs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/blgs.gif"))); // NOI18N
        miBlogs.setText("Blogs");
        miBlogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBlogsActionPerformed(evt);
            }
        });
        miAcc.add(miBlogs);

        jMenu10.add(miAcc);

        jMenuBar1.add(jMenu10);

        jMenu9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Setting1s.gif"))); // NOI18N
        jMenu9.setText("Settings");

        miSelectSub.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/select_course.gif"))); // NOI18N
        miSelectSub.setText("Select course");
        miSelectSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSelectSubActionPerformed(evt);
            }
        });
        jMenu9.add(miSelectSub);

        miUsrmanagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/users-.gif"))); // NOI18N
        miUsrmanagement.setText("Users Management");
        miUsrmanagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miUsrmanagementActionPerformed(evt);
            }
        });
        jMenu9.add(miUsrmanagement);

        jMenuBar1.add(jMenu9);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/DBM.gif"))); // NOI18N
        jMenu2.setText("DB Management");

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/backup_icon.gif"))); // NOI18N
        jMenuItem7.setText("Backup the database");
        jMenuItem7.setPreferredSize(new java.awt.Dimension(3, 35));
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Menu_PICS/Restore.gif"))); // NOI18N
        jMenuItem10.setText("Restore the database");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuBar1.add(jMenu2);

        jMenu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Help.gif"))); // NOI18N
        jMenu8.setText("Help");

        jMenuItem8.setText("About");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem8);

        jMenuItem5.setText("Contact us");
        jMenu8.add(jMenuItem5);

        jMenuItem9.setText("How to use");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem9);

        jMenuBar1.add(jMenu8);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        frmSubjects sub = new  frmSubjects();
        sub.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
           frmImgViewer img = new  frmImgViewer();
            img.show();
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void miPlansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPlansActionPerformed
        try {
            frmPlans pln=new frmPlans();
            pln.show();
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_miPlansActionPerformed

    private void miContactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miContactsActionPerformed
        frmLogin login = new frmLogin();
        frmContacts cont = new frmContacts();
        login.show();
        login.frm = cont;

    }//GEN-LAST:event_miContactsActionPerformed

    private void misAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_misAccActionPerformed
        frmLogin login = new frmLogin();
        frmAccounts Acc = new frmAccounts();
        login.show();
        login.frm = Acc;
    }//GEN-LAST:event_misAccActionPerformed

    private void miBlogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBlogsActionPerformed
        frmLogin login = new frmLogin();
        frmBlogs blg = new frmBlogs();
        login.show();
        login.frm = blg;
    }//GEN-LAST:event_miBlogsActionPerformed

   
    private void miUsrmanagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miUsrmanagementActionPerformed
          frmLogin login = new frmLogin();
           frmUsers usr=new frmUsers();
          login.show();
          login.frm = usr;
    }//GEN-LAST:event_miUsrmanagementActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        frmBackup bu = new frmBackup();
        bu.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        frmRestore res = new frmRestore();
        res.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed
        tpContent.setSelectedIndex(1);
    }//GEN-LAST:event_btnForwardActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        tpContent.setSelectedIndex(0);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //Check if the row is not the first ,if it is then disable the user to delete it
        if (Integer.valueOf(txtID.getText()) == 1) {
            btnDelete.enable(false);
        } //if not then call the method delete row
        else {

            int result = JOptionPane.showConfirmDialog(null, "Are you sure you wish to delete this row ?", "Alert", JOptionPane.YES_NO_CANCEL_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                try {
                    try {
                        delete_row();

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
                    }//End 1st try and catch
                } catch (SQLException ex) {
                }//End 2nd try and catch
            }  //End of nested if  
        }//End of outer if


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updat_frame();


    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        try {
            add_new();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        //Call update data to save changes made in the row

        try {
            updat_frame();
            index = Integer.valueOf(lblTotal.getText());
            show_data(idbo.RS_last(Inf_RS));


        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Set the index to the last item in the record

    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed


        try {
            //Call update data to save changes made in the row
            updat_frame();

            if (index > 1) {
                //if not then decrement the index to the previous item in the record
                index--;
                show_data(idbo.RS_previous(Inf_RS));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed



        try {
            index = 1;
            //Call update data to save changes made in the row
            updat_frame();
            //Show the data existing in the first item record
            show_data(idbo.RS_first(Inf_RS));
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }






    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed

        //Check if the index is not the last item 

        try {
            //Call update data to save changes made in the row
            updat_frame();
            if (index < (Integer.valueOf(lblTotal.getText()))) {   //if not then decrement the index to the next item in the record
                index++;
                //Show the data of the next record
                show_data(idbo.RS_next(Inf_RS));
            }
            //show_image();
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnNextActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed


  }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtSearchInputMethodTextChanged

   }//GEN-LAST:event_txtSearchInputMethodTextChanged

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
       
       
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased



       
            //check if the search text is empty then show the all data
            if ("".equals(txtSearch.getText()) && "".equals(subName)) {
            try {
                index = 1;
                Inf_RS = infOp.Show_Data();
                lblTotal.setText(idbo.show_total(Inf_RS));
                show_data(idbo.RS_first(Inf_RS));
                btnInsert.setVisible(true);
                cmbSubject.enable();
            } catch (SQLException ex) {
               JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
               txtSearch.setText("");
            }
                  
               } 
             
            else  if ("".equals(txtSearch.getText()) && !"".equals(subName))
              {
            try {
                //otherwise show the data according to the text enetered by the users
              index = 1;
              Inf_RS = infOp.search_sub_info("",subName);
              lblTotal.setText(idbo.show_total(Inf_RS));
                updat_frame();
               btnInsert.setVisible(false);
             cmbSubject.disable();
            } catch (SQLException ex) {
               JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
               txtSearch.setText("");
            }
                          
               }
              
              else if (!"".equals(txtSearch.getText()) && !"".equals(subName))
               {
            try {
                //otherwise show the data according to the text enetered by the users
               index = 1;
               Inf_RS = infOp.search_sub_info(txtSearch.getText(),cmbSubjectSearch.getSelectedItem().toString());
               lblTotal.setText(idbo.show_total(Inf_RS));
               show_data(idbo.RS_first(Inf_RS));
                btnInsert.setVisible(false);
              cmbSubject.disable();
            } catch (SQLException ex) {
               JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
               txtSearch.setText("");
            }
               
               }
               
               
             else  {
            try {
                //otherwise show the data according to the text enetered by the users
                index = 1;
                Inf_RS = infOp.search_info(txtSearch.getText());
                lblTotal.setText(idbo.show_total(Inf_RS));
                cmbSubject.disable();
                 btnInsert.setVisible(false);
                show_data(idbo.RS_first(Inf_RS));
            } catch (SQLException ex) {
               JOptionPane.showConfirmDialog(null, "! Sorry no match found !");
               txtSearch.setText("");
            }
                      }
            







    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:

   }//GEN-LAST:event_txtSearchKeyTyped

    private void ftxtDateTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtDateTimeActionPerformed

   }//GEN-LAST:event_ftxtDateTimeActionPerformed

    private void cmbSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectMouseClicked

   }//GEN-LAST:event_cmbSubjectMouseClicked

    private void cmbSubjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectMouseEntered

   }//GEN-LAST:event_cmbSubjectMouseEntered

    private void cmbSubjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectMouseExited

   }//GEN-LAST:event_cmbSubjectMouseExited

    private void cmbSubjectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectMousePressed


  }//GEN-LAST:event_cmbSubjectMousePressed

    private void cmbSubjectMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectMouseReleased


  }//GEN-LAST:event_cmbSubjectMouseReleased

    private void cmbSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSubjectItemStateChanged

   }//GEN-LAST:event_cmbSubjectItemStateChanged

    private void cmbSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubjectActionPerformed

   }//GEN-LAST:event_cmbSubjectActionPerformed

    private void cmbSubjectInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cmbSubjectInputMethodTextChanged

   }//GEN-LAST:event_cmbSubjectInputMethodTextChanged

    private void lblPicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPicMouseClicked
        //If user clicks the mouse twice then make him choose an image and insert it to the database
        if (evt.getClickCount() == 2) {
            try {
                setImage();
                infOp.info_picUpdate(path, Integer.valueOf(txtID.getText()));
            } catch (FileNotFoundException | SQLException ex) {
                Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }



    }//GEN-LAST:event_lblPicMouseClicked

    private void miSrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSrchActionPerformed
       try {
            frmSearching srch=new frmSearching();
            srch.show();
        } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_miSrchActionPerformed

    private void miWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miWebActionPerformed
         frmWebsites wb=new  frmWebsites();
         wb.show();
    }//GEN-LAST:event_miWebActionPerformed

    private void miSelectSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSelectSubActionPerformed
         
                 frmSearchSub.show();
                 cbSelectCourse.setSelected(true);
                cmbSubjectSearch.setVisible(true);
          
       
        
    }//GEN-LAST:event_miSelectSubActionPerformed

    private void lblSubInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_lblSubInputMethodTextChanged
      
    }//GEN-LAST:event_lblSubInputMethodTextChanged

    private void lblSubVetoableChange(java.beans.PropertyChangeEvent evt) throws java.beans.PropertyVetoException {//GEN-FIRST:event_lblSubVetoableChange
          

    }//GEN-LAST:event_lblSubVetoableChange

    private void cmbSubjectSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectSearchMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchMouseClicked

    private void cmbSubjectSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectSearchMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchMouseEntered

    private void cmbSubjectSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectSearchMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchMouseExited

    private void cmbSubjectSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectSearchMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchMousePressed

    private void cmbSubjectSearchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubjectSearchMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchMouseReleased

    private void cmbSubjectSearchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSubjectSearchItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchItemStateChanged

    private void cmbSubjectSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubjectSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchActionPerformed

    private void cmbSubjectSearchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cmbSubjectSearchInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectSearchInputMethodTextChanged

    private void cbSelectCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectCourseActionPerformed
       if(cbSelectCourse.isSelected())
            cmbSubjectSearch.setVisible(true);
       
       else
        cmbSubjectSearch.setVisible(false);
         
       
      
    }//GEN-LAST:event_cbSelectCourseActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        try {
            int selectedSub=cmbSubject.getSelectedIndex();
            updat_frame();
            subOp.fill_combo_box(cmbSubject);
           cmbSubject.setSelectedIndex(selectedSub);

        } catch (SQLException ex) {
           
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        
         frmSearchSub.setVisible(false);
        //If the check box is not set then no course is selected 
        if(!cbSelectCourse.isSelected())
        {   try {
            // so we empty the srch textboxes
                    lblSub.setText("");
                    txtSearch.setText("");
                    subName="";
                   //Then return the index to the first row
                    index = 1;
                    //Then show the whole data 
                      Inf_RS = infOp.Show_Data();
                      lblTotal.setText(idbo.show_total(Inf_RS));
                     // show_data(idbo.RS_first(Inf_RS));
                       btnInsert.setVisible(true);
                       cmbSubject.enable();
                       show_data(idbo.RS_first(Inf_RS));
                   
            } catch (SQLException ex) {
                Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
          
        }
        else{
         try {   //otherwise show the data according to the cousrse selected  by the users
              subName=cmbSubjectSearch.getSelectedItem().toString();
               lblSub.setText( "["+ subName+"]");
              
                index = 1;
                //And show the data of that specific course
                Inf_RS = infOp.search_sub_info("",cmbSubjectSearch.getSelectedItem().toString());
                lblTotal.setText(idbo.show_total(Inf_RS));
                show_data(idbo.RS_first(Inf_RS));
                 btnInsert.setVisible(false);
               cmbSubject.disable();
       
            } catch (SQLException ex) {
            Logger.getLogger(frmMainPage.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //Close the frame without doing any thing
        frmSearchSub.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmMainPage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOk;
    public javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox cbSelectCourse;
    public javax.swing.JComboBox cmbSubject;
    public javax.swing.JComboBox cmbSubjectSearch;
    private javax.swing.JInternalFrame frmSearchSub;
    private javax.swing.JFormattedTextField ftxtDateTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblFPBG;
    private javax.swing.JLabel lblPic;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblSub;
    private javax.swing.JLabel lblSubPic;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JMenu miAcc;
    private javax.swing.JMenuItem miBlogs;
    private javax.swing.JMenuItem miContacts;
    private javax.swing.JMenuItem miPlans;
    private javax.swing.JMenuItem miSelectSub;
    private javax.swing.JMenuItem miSrch;
    private javax.swing.JMenuItem miUsrmanagement;
    private javax.swing.JMenuItem miWeb;
    private javax.swing.JMenuItem misAcc;
    private javax.swing.JTabbedPane tpContent;
    private javax.swing.JTextPane txtComment;
    public javax.swing.JTextField txtID;
    private javax.swing.JTextPane txtInfo;
    private javax.swing.JTextPane txtMore_info;
    private javax.swing.JTextPane txtPicComment;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextPane txtTip;
    private javax.swing.JTextPane txtTitle;
    // End of variables declaration//GEN-END:variables
}
