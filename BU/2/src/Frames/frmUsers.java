package Frames;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import Classes.AuthentincationTab_operations;
import Classes.Info_DB_Operations;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class frmUsers extends javax.swing.JFrame {

    /**
     * Creates new form frmUsers
     */
    public frmUsers() {
        try {
            initComponents();
             //To set the image of the frame
          this.setIconImage(new ImageIcon(getClass()
                    .getResource("/Pics/Icons/usrs.gif")).getImage());
         
                               usr_RS=usrOp.show_users();
                               lblTotal1.setText(idbo.show_total(usr_RS));
                            //The first result is first shown 
                       
                           show_data(idbo.RS_first(usr_RS));
                           show_table(usr_RS);
                           frmEdit.setVisible(false);
                            set_OK_canel (false);
                           set_Editable(false);
        } catch (SQLException ex) {
            Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     //Initializing the global vars and methods that are used through the program
        ResultSet usr_RS;
        String path;
        Info_DB_Operations  idbo=new Info_DB_Operations ();
        AuthentincationTab_operations usrOp=new    AuthentincationTab_operations();
        int index=1; //For looping 
        String currentName;//For update verification
        
        
        

    
     //Method to show data once starting the app
      private void show_data(ResultSet rs)
      {
          //Bind the fields of the table with the frame components properly
        try {
            
                txtID.setText(rs.getString("usr_ID"));
                txtName.setText(rs.getString("user_Name"));
                
                txtUser_ID.setText(rs.getString("usr_ID"));
                txtUserName.setText(rs.getString("user_Name"));
                txtUserPassword.setText(rs.getString("user_password"));
                lblPosition1.setText(String.valueOf(index));
            
            
           
        } catch (SQLException ex) {
          
        }
    
      }
      //End of show data method
      
      //Method to show data as  a table
      private void show_table(ResultSet RS) throws SQLException
         
      {
          //Model to fill the jtable by the data from the database table
         DefaultTableModel model=(DefaultTableModel) tblusers.getModel();
         //Clear the old data if any
        model.getDataVector().removeAllElements();
      //Put the first data from the database to the jtable
         RS.first();
         model.addRow(new Object[]{RS.getString("user_Name"),RS.getString("user_password")});
         //Then loop and put the next data in the jtable
         while(RS.next())
          {
                     //Selecting the attribute to be stored into the array
          model.addRow(new Object[]{RS.getString("user_Name"),RS.getString("user_password")});
            // add group names to the array list
                          
          }
      
      }
       //End show as a table
      
      
      //Method to control the btns and frames
      /**
       * 
       * @param state
       */
      public void set_Editcomponents(boolean state)
      {  
            btnInsert.setVisible(state);
            btnUpdate.setVisible(state);
            btnDelete.setVisible(state);
           lblComponents.setVisible(state);
            
      }//End set components
      
      //Anothe method to set the ok and cancel buttons
      
      /**
       * 
       * @param state
       */
      public void set_OK_canel (boolean state)
      {
           btnOk.setVisible(state);
           btnCancel.setVisible(state);
           btnOkUpdate.setVisible(state);
            btnInsert.setVisible(!state);
           btnUpdate.setVisible(!state);
            btnDelete.setVisible(!state);
         
      }//End set components
     
      //Metho the control the textboxes editability
      /**
       * 
       * @param state
       */
      public void set_Editable(boolean state)
      {
             txtUserName.setEditable(state);
             txtUserPassword.setEditable(state);
             txtConfirm.setEditable(state);      
      
      
      
      }
      
      
      
    //Method to initialize thr form to get the new entry
      private void Reset_textboxex() 
      
      {                  
              set_Editable(true);
           //Empt the textboxes when inserting
             txtUser_ID.setVisible(false);
             lblID.setVisible(false);
             txtUserPassword.setText("");
             txtConfirm.setText("");
              
           
          
      
      }//End add new method
      
       private void set_update()
      {
         try {
           
            //Bind the values of the components with the parameters of the update method
                      
              String[] textboxes=new String[2];
             
              textboxes[0]= txtUserName.getText();
              textboxes[1]=txtUserPassword.getText();
            
             
                     //Call the update method
                   usrOp.update_users(Integer.valueOf(txtID.getText()), textboxes);  
           
            
          
           
           } catch (SQLException ex) {JOptionPane.showMessageDialog(null,ex);   
        }
      
      }//End of update method 
      
      
      //Method to update the data 
       /**
        * 
        */
       public void update_frame() 
      {
      try { 
             //When we update first we check if the result set to updated is either search or show data
              
              if("".equals(txtSearch.getText()))
                 { 
                     
                    usr_RS=usrOp.show_users();
                //Call the method regresh to show the new updates in the form instantly
                     
                      show_data( idbo.refresh_data(usr_RS,index)  );
                     
                }
              else
              {      
                  
                   
                   usr_RS= usrOp.search_users(txtSearch.getText());
                    //Call the method regresh to show the new updates in the form instantly
                      show_data( idbo.refresh_data(usr_RS,index)  );
                    
              }
                             

        } catch (SQLException ex) { 
          
        }
      
      
      }//End of update data method
      
       //Method to delete a specific row in a record
      private void delete_row() throws SQLException, FileNotFoundException, IOException
      { 
         
         //Call the method designated for deleting rows 
               usrOp.delete_users(Integer.valueOf(txtID.getText()));
           //then jump to the nearest row     
                usr_RS=usrOp.show_users();
               index=Integer.valueOf(idbo.show_total(usr_RS));
               lblTotal1.setText(String.valueOf(index));
                   if(usr_RS.next())
                   {show_data(idbo.RS_next(usr_RS));
                    show_table(usr_RS);
                   }
               else
                { index=1;
                   show_data(idbo.RS_first(usr_RS));
                    show_table(usr_RS);
               }
      
      
      }  //End of delete row method
      
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        lblTotal1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblPosition1 = new javax.swing.JLabel();
        frmEdit = new javax.swing.JInternalFrame();
        lblID = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtUser_ID = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        btnCloseEdit = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnOkUpdate = new javax.swing.JButton();
        txtUserPassword = new javax.swing.JPasswordField();
        txtConfirm = new javax.swing.JPasswordField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        lblComponents = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblusers = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lblTry = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JLabel();
        txtID = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLast.setToolTipText("Move lats");
        btnLast.setBorder(null);
        btnLast.setBorderPainted(false);
        btnLast.setContentAreaFilled(false);
        btnLast.setRequestFocusEnabled(false);
        btnLast.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Last.jpg"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        getContentPane().add(btnLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 3, 20, 20));

        btnNext.setToolTipText("Move next");
        btnNext.setBorder(null);
        btnNext.setContentAreaFilled(false);
        btnNext.setPreferredSize(new java.awt.Dimension(39, 23));
        btnNext.setRequestFocusEnabled(false);
        btnNext.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/next.jpg"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 3, 15, 20));

        jLabel13.setText("}");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 10, 20));

        lblTotal1.setToolTipText("Total rows");
        getContentPane().add(lblTotal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 3, 40, 20));

        jLabel11.setText("of {");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 3, 20, 20));

        lblPosition1.setToolTipText("Current position");
        getContentPane().add(lblPosition1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 3, 30, 20));

        frmEdit.setBorder(null);
        frmEdit.setVisible(false);
        frmEdit.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblID.setText("ID :");
        frmEdit.getContentPane().add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 20, -1));

        jLabel8.setText("User name :");
        frmEdit.getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 70, -1));

        jLabel10.setText("Password :");
        frmEdit.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 70, -1));

        jLabel12.setText("Confirm Password :");
        frmEdit.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 120, -1));

        txtUser_ID.setEditable(false);
        txtUser_ID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtUser_ID.setAlignmentX(1.9F);
        txtUser_ID.setAlignmentY(1.9F);
        txtUser_ID.setAutoscrolls(false);
        txtUser_ID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        frmEdit.getContentPane().add(txtUser_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 70, 30));

        txtUserName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtUserName.setBorder(null);
        frmEdit.getContentPane().add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 120, 30));

        btnCloseEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/x1.jpg"))); // NOI18N
        btnCloseEdit.setContentAreaFilled(false);
        btnCloseEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseEditActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnCloseEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 20, 20));

        btnOk.setBackground(new java.awt.Color(223, 223, 229));
        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnOK.gif"))); // NOI18N
        btnOk.setToolTipText("OK");
        btnOk.setBorderPainted(false);
        btnOk.setContentAreaFilled(false);
        btnOk.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnOK.gif"))); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 50, 40));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnCancel.gif"))); // NOI18N
        btnCancel.setToolTipText("Cancel");
        btnCancel.setBorderPainted(false);
        btnCancel.setContentAreaFilled(false);
        btnCancel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnCancel.gif"))); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 46, 40));

        btnOkUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/btnOK.gif"))); // NOI18N
        btnOkUpdate.setBorderPainted(false);
        btnOkUpdate.setContentAreaFilled(false);
        btnOkUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkUpdateActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnOkUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 46, 40));

        txtUserPassword.setBorder(null);
        frmEdit.getContentPane().add(txtUserPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 110, 30));

        txtConfirm.setBorder(null);
        frmEdit.getContentPane().add(txtConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 70, 110, 30));

        btnUpdate.setToolTipText("update this row");
        btnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.setBorderPainted(false);
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setInheritsPopupMenu(true);
        btnUpdate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Save 1.jpg"))); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 20, 20));

        btnDelete.setToolTipText("Delete this row");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.setBorderPainted(false);
        btnDelete.setContentAreaFilled(false);
        btnDelete.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Delete.jpg"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 20, 20));

        btnInsert.setToolTipText("Add new row");
        btnInsert.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnInsert.setBorderPainted(false);
        btnInsert.setContentAreaFilled(false);
        btnInsert.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/new.jpg"))); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        frmEdit.getContentPane().add(btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 20, 20));

        lblComponents.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Editing bar.jpg"))); // NOI18N
        frmEdit.getContentPane().add(lblComponents, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 8, 68, 27));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/AdduserBG.jpg"))); // NOI18N
        frmEdit.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 260));

        getContentPane().add(frmEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 440, 280));

        btnPrevious.setToolTipText("Move previous");
        btnPrevious.setBorder(null);
        btnPrevious.setContentAreaFilled(false);
        btnPrevious.setPreferredSize(new java.awt.Dimension(39, 23));
        btnPrevious.setRequestFocusEnabled(false);
        btnPrevious.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Previous.jpg"))); // NOI18N
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 3, 15, 20));

        btnFirst.setBackground(new java.awt.Color(204, 255, 51));
        btnFirst.setToolTipText("Move first");
        btnFirst.setBorder(null);
        btnFirst.setContentAreaFilled(false);
        btnFirst.setPreferredSize(new java.awt.Dimension(39, 23));
        btnFirst.setRequestFocusEnabled(false);
        btnFirst.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/First.jpg"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        getContentPane().add(btnFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 3, 20, 20));

        txtSearch.setToolTipText("Search for an ID or a text");
        txtSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 130, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Searchicon_1.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Name:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        tblusers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "usr_name", "usr_password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblusers.setEnabled(false);
        jScrollPane2.setViewportView(tblusers);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 280, 240));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("ID :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, -1, -1));
        getContentPane().add(lblTry, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        jButton4.setToolTipText("Exit");
        jButton4.setContentAreaFilled(false);
        jButton4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/x1.jpg"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 20, 20));

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/brnEdit1.gif"))); // NOI18N
        btnEdit.setToolTipText("Edit user date");
        btnEdit.setBorderPainted(false);
        btnEdit.setContentAreaFilled(false);
        btnEdit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/brnEdit1.gif"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 3, 40, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("[Users]");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 4, 60, -1));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/usrBar.jpg"))); // NOI18N
        jLabel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 30));

        txtName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtName.setAutoscrolls(true);
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 120, 50));

        txtID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 80, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Untitled-4.gif"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 20, 660, 340));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseEditActionPerformed
           btnEdit.setVisible(true);  
          tblusers.setVisible(true);
           tblusers.setVisible(true);
           frmEdit.setVisible(false);
    }//GEN-LAST:event_btnCloseEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        //Check if the row is not the first ,if it is then disable the user to delete it
        if (Integer.valueOf(txtID.getText()) == 1) {
            btnDelete.enable(false);
        } //if not then call the method delete row
        else {
            //Alert the users before deleting by poping up an option message
            int result = JOptionPane.showConfirmDialog(null, "Are you sure you wish to delete this row ?", "Alert", JOptionPane.YES_NO_CANCEL_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                try {
                    try {
                        delete_row();
                        show_table(usr_RS);

                    } catch (FileNotFoundException ex) {
                        
                    } catch (IOException ex) {
                       
                    }
                } catch (SQLException ex) {
                }
            }

        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       
        
        
        //Keep the name of the user name in  a vare to be checked
         currentName=txtUserName.getText();
                try {
            String check=JOptionPane.showInputDialog("Please input the current usre  password: ");
            boolean stop=false;
            int counter=0;
            //Check if he is the autherized user
            while(!stop &&counter<3)
            { if(usrOp.verify_user(txtUserName.getText(), check))
          
              {         Reset_textboxex();
                        set_OK_canel (true);
                        set_Editcomponents(false);
                       btnOk.setVisible(false);
                       
                     stop=true;
              }
              else
              {
                  counter++;
                  int result=JOptionPane.showConfirmDialog(null, "! The password is incorrect,please try again ^-^ !");
                  if(result==JOptionPane.YES_OPTION)
                 check=JOptionPane.showInputDialog("Please input the current password: ");
                  else
                    stop =true; 
                
                }
            }//End while
        } catch (SQLException ex) {
            Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
         
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        //call the method designated for adding row
             set_OK_canel (true);          
             Reset_textboxex();
              set_Editcomponents(false);
             txtUserName.setText("");
             btnOkUpdate.setVisible(false);
             

       
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        //Call update data to save changes made in the row

        try {
           
            update_frame();
            index = Integer.valueOf(lblTotal1.getText());
            show_data(idbo.RS_last(usr_RS));

            show_table(usr_RS);


        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        //Set the index to the last item in the record
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed


        //Check if the index is not the last item 

        try { update_frame();
          
            if (index < (Integer.valueOf(lblTotal1.getText()))) {   //if not then increment the index to the next item in the record
                index++;
                //Show the data of the next record
                show_data(idbo.RS_next(usr_RS));
                show_table(usr_RS);
            }
            //show_image();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed

        try {
          
          
            update_frame();

            if (index > 1) {
                //if not then decrement the index to the previous item in the record
                index--;
                show_data(idbo.RS_previous(usr_RS));
                show_table(usr_RS);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed


        try {
             update_frame();
            index = 1;
            
            //Show the data existing in the first item record
            show_data(idbo.RS_first(usr_RS));
            show_table(usr_RS);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_btnFirstActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased

        try {
            //check if the search text is empty then show the all data
            if ("".equals(txtSearch.getText())) {
                index = 1;
                usr_RS = usrOp.show_users();
                lblTotal1.setText(idbo.show_total(usr_RS));

                show_data(idbo.RS_first(usr_RS));
                show_table(usr_RS);
            } else {
                //otherwise show the data according to the text enetered by the users
                index = 1;
                usr_RS = usrOp.search_users(txtSearch.getText());
                lblTotal1.setText(idbo.show_total(usr_RS));

                show_data(idbo.RS_first(usr_RS));
                show_table(usr_RS);

            }
        } catch (SQLException ex) {
          
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
            set_Editcomponents(true);
            frmEdit.setVisible(true);
            tblusers.setVisible(false);
            btnEdit.setVisible(false);
         
           
    }//GEN-LAST:event_btnEditActionPerformed

    
    
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
   //Then make sure that the user filled all of them
           
            if(!"".equals(txtUserName.getText()) &&!"".equals(txtUserPassword.getText()) &&!"".equals(txtConfirm.getText()))
            {
                   //Then make sure the password and the confirm are the same
                if(txtUserPassword.getText() == null ? txtConfirm.getText() == null : txtUserPassword.getText().equals(txtConfirm.getText()))
                { 
                try {
                    //Then check if the user name is not replicated
                    if(usrOp.check_replication(txtUserName.getText()))
                    {
                     try {
                            //Call the method designated for addin new reord
                              usrOp.add_new(txtUserName.getText(),txtUserPassword.getText());
                            //Then jump to the inserted row
                               usr_RS= usrOp.show_users();
                               index=Integer.valueOf(idbo.show_total(usr_RS));
                                 lblTotal1.setText(String.valueOf(index));
                                
                                   show_data(idbo.RS_last(usr_RS));
                                   show_table(usr_RS);
                                   set_OK_canel (false);
                                   set_Editable(false);
                                   txtConfirm.setText("");
                                   txtUser_ID.setVisible(true);
                                   lblID.setVisible(true);
                                    set_Editcomponents(true);
                                  JOptionPane.showMessageDialog(null, "! Insertion Done successfully ! ", "information", JOptionPane.INFORMATION_MESSAGE);  
                            } catch (SQLException ex) { Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);     }
                      }  //Else if the user name is already exiting then inform the user
                    else 
                         { JOptionPane.showMessageDialog(null, "! The name is already existting ! ", "Error", JOptionPane.ERROR_MESSAGE); 
                         Reset_textboxex();
                         txtUserName.setText("");
                         }
                    
                      }   catch (SQLException ex) { Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex); }
                       
                   }  //Else the confirm and the password are not equal warn the user
                  else
                   {      JOptionPane.showMessageDialog(null, "The confirm not match the password ", "Error", JOptionPane.ERROR_MESSAGE);
                       txtConfirm.setText("");
                    }   
            }
            //Else the all components not filled then alert the user
            else
             JOptionPane.showMessageDialog(null, "You must fill all textboxes ", "Error", JOptionPane.ERROR_MESSAGE);
                           
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            JOptionPane.showMessageDialog(null, "The operation cancelled ", "information", JOptionPane.INFORMATION_MESSAGE);
                 update_frame();
                 show_table(usr_RS);
                 txtConfirm.setText("");
                  set_OK_canel (false);
                  set_Editable(false);
                  txtUser_ID.setVisible(true);
                  lblID.setVisible(true);
                   set_Editcomponents(true);
        } catch (SQLException ex) {
            Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkUpdateActionPerformed
          //Then make sure that the user filled all of them
           
            if(!"".equals(txtUserPassword.getText()) &&!"".equals(txtConfirm.getText()))
            {
                   //Then make sure the password and the confirm are the same
                 if(txtUserPassword.getText() == null ? txtConfirm.getText() == null : txtUserPassword.getText().equals(txtConfirm.getText()))
                  { 
                   
                      
                    //Else the user name is  changed save the chnages
                    if (!txtUserName.getText().equals(currentName))
                      {
                       try {
                        //If cheanged then verify replication 
                           if(usrOp.check_replication(txtUserName.getText()))
                             {
                               try {
                     //Call the method designated for update
                                 set_update();
                                 update_frame();
                                 show_table(usr_RS);
                                 set_OK_canel (false);
                                  set_Editable(false);
                                  txtConfirm.setText("");
                                 JOptionPane.showMessageDialog(null, "! update Done successfully ! ", "information", JOptionPane.INFORMATION_MESSAGE);  
                                  txtUser_ID.setVisible(true);
                                  lblID.setVisible(true);
                                 set_Editcomponents(true);
                                    } catch (SQLException ex) { Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);}  
                             
                             
                              }//End replication checking if 
                            //Else the name is replicated
                              else 
                              { JOptionPane.showMessageDialog(null, "! The name is already existing ! ", "Error", JOptionPane.ERROR_MESSAGE); 
                                Reset_textboxex();
                           
                               }//End else replication
                               
                           
                        } catch (SQLException ex) {Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);}
                                                      
                    
                    
                     }//End checking textbox else
                    
                    //Else Check if the user name not changed
                     else{
                           try {
                           //Call the method designated for update
                                     set_update();
                                     update_frame();
                                     show_table(usr_RS);
                                     set_OK_canel (false);
                                     set_Editable(false);
                                    txtConfirm.setText("");
                                    JOptionPane.showMessageDialog(null, "! update Done successfully ! ", "information", JOptionPane.ERROR_MESSAGE);  
                                    txtUser_ID.setVisible(true);
                                    lblID.setVisible(true);
                                  } catch (SQLException ex) {Logger.getLogger(frmUsers.class.getName()).log(Level.SEVERE, null, ex);}
                                        
                    
                        } //End else user name changing
                    
                                             
                }//End checking confirm match check
                
                //Else checking confirm match check
                 else
                 {JOptionPane.showMessageDialog(null, "The confirm not match the password ", "information", JOptionPane.ERROR_MESSAGE);
                  txtConfirm.setText("");
            
                 }   //End Else checking confirm match check
            }
            //Else the all components not filled then alert the user
            else
             JOptionPane.showMessageDialog(null, "You must fill all textboxes ", "information", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnOkUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmUsers().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCloseEdit;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnOkUpdate;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JInternalFrame frmEdit;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblComponents;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblPosition1;
    private javax.swing.JLabel lblTotal1;
    private javax.swing.JLabel lblTry;
    private javax.swing.JTable tblusers;
    private javax.swing.JPasswordField txtConfirm;
    private javax.swing.JLabel txtID;
    private javax.swing.JLabel txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JPasswordField txtUserPassword;
    private javax.swing.JTextField txtUser_ID;
    // End of variables declaration//GEN-END:variables
}
